<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.purchase.mapper.admin.TbAdminMapper" >

  <sql id="Example_Where_Clause_Ext">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and a.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and a.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and a.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and a.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <resultMap id="BaseResultMapExt" type="com.purchase.pojo.admin.TbAdmin" extends="BaseResultMap">
    <collection property="roleId" column="role_id" ofType="java.lang.Long">
      <id column="role_id" property="roleId" jdbcType="BIGINT"></id>
    </collection>
    <collection property="roleNames" column="role_name" ofType="java.lang.String">
      <id column="role_name" property="roleName" jdbcType="BIGINT"></id>
    </collection>
  </resultMap>
  <select id="selectByExampleExt" resultMap="BaseResultMapExt">
    select
    a.*,
    b.role_id,
    c.role_name
    from tb_admin a
    LEFT JOIN tb_admin_role b ON (a.id = b.user_id)
    LEFT JOIN tb_roles c ON (b.role_id = c.role_id)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_Ext" />
    </if>
      GROUP BY a.id
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
  </select>

  <select id="selectByExampleExt_COUNT" resultType="Long">
    select
    count(DISTINCT a.id)
    from tb_admin a
    LEFT JOIN tb_admin_role b ON (a.id = b.user_id)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_Ext" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
  </select>


  <resultMap id="BaseResultMapRole" type="com.purchase.pojo.admin.TbRoles" extends="com.purchase.mapper.admin.TbRolesMapper.BaseResultMap">
    <collection property="roleId" column="role_id" ofType="java.lang.Long">
      <id column="role_id" property="roleId" jdbcType="BIGINT"></id>
    </collection>
  </resultMap>
  <select id="selectRoleByExample" resultMap="BaseResultMapRole">
    select
          c.*
    from tb_admin a
    INNER JOIN tb_admin_role b ON (a.id = b.user_id)
    INNER JOIN tb_roles c ON (c.role_id = b.role_id)
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause_Ext" />
    </if>
    <if test="example.orderByClause != null" >
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="getAdminSupplierIdNotNullExt" resultMap="BaseResultMap">
    select a.* from tb_admin a where a.is_on_job = 1 and a.supplier_id IS NOT NULL
  </select>
</mapper>